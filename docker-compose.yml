version: '3.8'

services:
  # PostgreSQL database service
  postgres:
    image: postgres:14-alpine
    container_name: lnd-ws-postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: lnd_wallet_segregation
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lnd-ws-app
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      # Use postgres as hostname since we're in Docker
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/lnd_wallet_segregation?schema=public
      # Load all other environment variables from .env
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - LND_REST_HOST=${LND_REST_HOST}
      - LND_MACAROON_PATH=${LND_MACAROON_PATH}
      - LND_TLS_CERT_PATH=${LND_TLS_CERT_PATH}
      - USER_IDENTIFIER_PATTERN=${USER_IDENTIFIER_PATTERN}
      - API_KEY=${API_KEY}
    env_file:
      - .env
    volumes:
      - ./prisma:/app/prisma
    restart: on-failure
    # First initialize the database, then start the application
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 3 &&
        echo 'Creating database schema...' &&
        npx prisma db push --accept-data-loss &&
        echo 'Starting application...' &&
        npm start
      "
    # Adding DNS servers to properly resolve external hostnames
    dns:
      - 8.8.8.8
      - 1.1.1.1

volumes:
  postgres_data: 